name: Helm Chart OCI â†’ ECR

on:
  push:
    tags:
      - "chart-v*.*.*"

env:
  # Repo-level Variables (recommended) or override here
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  AWS_BOOTSTRAP_ROLE: ${{ vars.AWS_BOOTSTRAP_ROLE }}      # OIDC role ARN
  ECR_HELM_REPO: ${{ vars.ECR_HELM_REPO || 'demo-app-chart' }}
  CHART_DIR: charts/demo-app
  # Repo-level Secret
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  # Computed registry host
  OCI_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION || 'us-east-1' }}.amazonaws.com

jobs:
  push-chart:
    runs-on: ubuntu-latest
    permissions:
      id-token: write     # needed for OIDC
      contents: read
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS creds (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ env.AWS_BOOTSTRAP_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: chart-oci-ecr-${{ github.run_id }}

      - name: Sanity check chart path
        run: |
          ls -la
          ls -la "${CHART_DIR}"
          test -f "${CHART_DIR}/Chart.yaml"

      # (Optional) Ensure the ECR repository for Helm OCI exists
      - name: Ensure ECR Helm (OCI) repo exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_HELM_REPO}" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${ECR_HELM_REPO}" --image-scanning-configuration scanOnPush=true >/dev/null

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Install yq
        uses: mikefarah/yq@v4.44.3

      - name: Login to Amazon ECR (Helm OCI)
        run: |
          aws ecr get-login-password --region "${AWS_REGION}" | \
            helm registry login "${OCI_REGISTRY}" --username AWS --password-stdin

      # Derive the appVersion from the tag name: chart-v1.2.3 -> 1.2.3
      - name: Compute IMAGE_TAG (from chart tag)
        id: tag
        run: |
          RAW="${GITHUB_REF_NAME}"          # e.g., chart-v1.2.3
          IMAGE_TAG="${RAW#chart-v}"        # -> 1.2.3
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "Using IMAGE_TAG=$IMAGE_TAG"

      # Set Chart.appVersion to the image tag. (Chart 'version' is managed by release-please.)
      - name: Set Chart.appVersion
        run: |
          yq -i ".appVersion = \"${{ steps.tag.outputs.IMAGE_TAG }}\"" "${CHART_DIR}/Chart.yaml"
          echo "Resulting Chart.yaml:"
          yq '.' "${CHART_DIR}/Chart.yaml"

      - name: Package chart
        run: |
          mkdir -p dist
          helm package "${CHART_DIR}" --destination dist
          ls -l dist

      - name: Push chart to ECR OCI
        run: |
          FILE=$(ls dist/*.tgz)
          echo "Pushing $FILE to oci://${OCI_REGISTRY}/${ECR_HELM_REPO}"
          helm push "$FILE" oci://${OCI_REGISTRY}/${ECR_HELM_REPO}
