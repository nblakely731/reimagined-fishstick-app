name: Docker Publish (ECR â€¢ latest on main)

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  ECR_REPO: ${{ vars.ECR_REPO || 'demo-app' }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

jobs:
  build-and-push-latest:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REPO }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure AWS creds (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: ecr-latest-${{ github.run_id }}

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_REPO}" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "${ECR_REPO}" >/dev/null

      - name: Login to Amazon ECR (Docker)
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate Docker metadata (latest + sha)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_URI }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Show computed tags
        run: |
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
